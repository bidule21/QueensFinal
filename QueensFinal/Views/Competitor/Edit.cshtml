@model QueensFinal.Models.Competitor

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Competitor</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BroughtForwardPoints)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BroughtForwardPoints)
            @Html.ValidationMessageFor(model => model.BroughtForwardPoints)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BroughtForwardVs)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BroughtForwardVs)
            @Html.ValidationMessageFor(model => model.BroughtForwardVs)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.x900Sighter1)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Sighter1, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.x900Sighter2)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Sighter2, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Sighter1Converted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.x900Sighter1Converted)
            @Html.ValidationMessageFor(model => model.x900Sighter1Converted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Sighter2Converted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.x900Sighter2Converted)
            @Html.ValidationMessageFor(model => model.x900Sighter2Converted)
        </div>
        

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot1)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot1, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot2)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot2, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot3)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot3, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot4)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot4, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot5)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot5, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot6)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot6, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot7)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot7, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot8)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot8, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot9)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot9, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot10)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot10, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot11)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot11, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot12)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot12, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot13)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot13, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot14)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot14, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x900Shot15)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x900Shot15, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        
        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Sighter1)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Sighter1, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Sighter2)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Sighter2, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Sighter1Converted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.x1000Sighter1Converted)
            @Html.ValidationMessageFor(model => model.x1000Sighter1Converted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Sighter2Converted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.x1000Sighter2Converted)
            @Html.ValidationMessageFor(model => model.x1000Sighter2Converted)
        </div>
        
        
        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot1)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot1, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot2)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot2, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot3)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot3, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot4)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot4, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot5)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot5, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot6)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot6, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot7)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot7, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot8)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot8, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot9)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot9, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot10)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot10, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot11)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot11, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot12)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot12, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot13)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot13, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot14)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot14, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.x1000Shot15)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.x1000Shot15, new SelectList(Enum.GetValues(typeof(QueensFinal.Models.Score))))
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
